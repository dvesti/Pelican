<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Pelican-200 - Supported Plugins</title><link href="https://github.com/dvesti/Pelican/" rel="alternate"></link><link href="https://github.com/dvesti/Pelican/feeds/supported-plugins.atom.xml" rel="self"></link><id>https://github.com/dvesti/Pelican/</id><updated>2019-12-08T00:00:00+02:00</updated><subtitle>Блог сайта Dmitriev.ee</subtitle><entry><title>Много-страничная статья — Часть 2</title><link href="https://github.com/dvesti/Pelican/2019/12/08/how-to-use-series-plugin-2/" rel="alternate"></link><published>2019-12-08T00:00:00+02:00</published><updated>2019-12-08T00:00:00+02:00</updated><author><name>Jack De Winter</name></author><id>tag:github.com,2019-12-08:/dvesti/Pelican/2019/12/08/how-to-use-series-plugin-2/</id><summary type="html">&lt;p&gt;Elegant can be configured to provide a series section on the right sidebar. Only visible in articles that are labelled as part of a series, this indicator allows navigation between the articles in the&amp;nbsp;series.&lt;/p&gt;</summary><content type="html">&lt;h2 id="and-now-back-to-your-regular-programming"&gt;And Now Back to Your Regular Programming&lt;a class="headerlink" href="#and-now-back-to-your-regular-programming" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To show how this feature works, with a concrete example, this article was purposefully
split into two parts. The first part of this article can be accessed by looking under
the section labelled &lt;code&gt;Article Series&lt;/code&gt; on the right toolbar. This &lt;code&gt;Part 1&lt;/code&gt; article is
displayed using normal text, while the following &lt;code&gt;Part 2&lt;/code&gt; article is shown in an
italicized text. Click on the &lt;code&gt;Part 1&lt;/code&gt; article text on the right toolbar to go to the
previous&amp;nbsp;article.&lt;/p&gt;
&lt;h2 id="article-metadata"&gt;Article Metadata&lt;a class="headerlink" href="#article-metadata" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Once the configuration for Series is enabled in the configuration file, using this feature for
a given set of articles requires that the article contains the &lt;code&gt;series&lt;/code&gt;
&lt;a href="https://github.com/dvesti/Pelican/2019/07/03/metadata/"&gt;metadata&lt;/a&gt; field&amp;nbsp;value.&lt;/p&gt;
&lt;p&gt;The text assigned to the &lt;code&gt;series&lt;/code&gt; metadata field is the title of the series. When the page is
created, Pelican provides Elegant with a list of all pages that have the same value for the
&lt;code&gt;series&lt;/code&gt; metadata field. By default, Elegant sorts that list according to the publish date for
each article. The titles for those pages is then displayed in sorted order, with the current
page presented in &lt;em&gt;italics&lt;/em&gt; and the other pages presented as a link to those&amp;nbsp;pages.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;series&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Maximizing&lt;/span&gt; &lt;span class="n"&gt;Elegant&lt;/span&gt;
&lt;span class="n"&gt;series_index&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If there is a reason to override the ordering of the articles, the &lt;code&gt;series_index&lt;/code&gt; metadata
field is required. It is recommended that you use the part number you want displayed for the
article as the value to assign to the&amp;nbsp;field.&lt;/p&gt;</content><category term="Supported Plugins"></category><category term="pelican-plugin"></category><category term="navigation"></category><category term="web-design"></category></entry><entry><title>Много-страничная статья — Часть 1</title><link href="https://github.com/dvesti/Pelican/2019/12/07/how-to-use-series-plugin/" rel="alternate"></link><published>2019-12-07T00:00:00+02:00</published><updated>2019-12-07T00:00:00+02:00</updated><author><name>Jack De Winter</name></author><id>tag:github.com,2019-12-07:/dvesti/Pelican/2019/12/07/how-to-use-series-plugin/</id><summary type="html">&lt;p&gt;Elegant can be configured to provide a series section on the right sidebar. Only visible in articles that are labelled as part of a series, this indicator allows navigation between the articles in the&amp;nbsp;series.&lt;/p&gt;</summary><content type="html">&lt;p&gt;When writing articles about certain topics, it is advantageous to split a single article into
multiple articles. Without splitting the article up, the author would be forced to cram all
of the content into a denser and much longer article, reducing its effectiveness and
readability in the process. Splitting the article allows the author to focus on a specific
concept of the larger article, thereby increasing the overall appearance and&amp;nbsp;readability.&lt;/p&gt;
&lt;p&gt;Elegant provides the ability to present a view of the articles in the series in the middle of
the right sidebar. This section starts with the name of the series, followed by one bullet
point for each of the articles in the series. The text for the article is prefaced with
&amp;#8220;Part N: &amp;#8221; (where N is the index of the article) and then the title for the article. To make
navigation easier, the current article is presented in italics, with the other articles being
presented as links to their respective&amp;nbsp;articles.&lt;/p&gt;
&lt;p&gt;Here is an example of what the Series section may look&amp;nbsp;like:&lt;/p&gt;
&lt;p&gt;&lt;img alt="series example in the sidebar" src="https://github.com/dvesti/Pelican/images/elegant-theme_multi-part-sidebar.png" /&gt;&lt;/p&gt;
&lt;h2 id="configuration"&gt;Configuration&lt;a class="headerlink" href="#configuration" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To enable the reading time for your articles, you need to add &lt;code&gt;series&lt;/code&gt; to the &lt;code&gt;PLUGINS&lt;/code&gt;
configuration variable in your Pelican&amp;nbsp;configuration.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;series&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In addition, the &lt;code&gt;SERIES_TITLE&lt;/code&gt; configuration variable can be set to specify the title used for
the Series section, regardless of the&amp;nbsp;series.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;SERIES_TITLE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;More In This Series&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="to-be-continued"&gt;To Be Continued&lt;a class="headerlink" href="#to-be-continued" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To show how this feature works, with a concrete example, this article was purposefully
split into two parts. The second part of this article can be accessed by looking under
the section labelled &lt;code&gt;Article Series&lt;/code&gt; on the right toolbar. This &lt;code&gt;Part 1&lt;/code&gt; article is
displayed using italicized text, while the following &lt;code&gt;Part 2&lt;/code&gt; article is shown using
normal text. Click on the &lt;code&gt;Part 2&lt;/code&gt; article on the right toolbar to go to the next&amp;nbsp;article.&lt;/p&gt;</content><category term="Supported Plugins"></category><category term="pelican-plugin"></category><category term="navigation"></category><category term="web-design"></category></entry><entry><title>Add A Reading Time Estimate to Your Articles</title><link href="https://github.com/dvesti/Pelican/2019/07/15/add-reading-time-estimate/" rel="alternate"></link><published>2019-07-15T20:08:00+03:00</published><updated>2019-07-15T20:08:00+03:00</updated><author><name>Jack De Winter</name></author><id>tag:github.com,2019-07-15:/dvesti/Pelican/2019/07/15/add-reading-time-estimate/</id><summary type="html">&lt;p&gt;Elegant can be configured to provide an estimate of the reading time for your articles, giving the user the ability to gauge how long the articles&amp;nbsp;are.&lt;/p&gt;</summary><content type="html">&lt;p&gt;When you go to articles on a number of popular websites, the articles will present an estimate
to the reader on the amount of time it will take to read the article. This estimate is
typically based on the average reading speed of an adult being roughly 265 words per minute
while retaining&amp;nbsp;comprehension.&lt;/p&gt;
&lt;p&gt;Elegant provides this feature, adding a &lt;code&gt;Reading Time&lt;/code&gt; section at the top of the right sidebar
with the estimate for the current&amp;nbsp;article.&lt;/p&gt;
&lt;p&gt;Here is an example of what the Reading Time Estimate section may look&amp;nbsp;like:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Reading Time Section" src="https://github.com/dvesti/Pelican/images/elegant-theme_reading-time.png" /&gt;&lt;/p&gt;
&lt;h2 id="configuration"&gt;Configuration&lt;a class="headerlink" href="#configuration" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To enable the reading time for your articles, you need to add &lt;code&gt;post_stats&lt;/code&gt; to the &lt;code&gt;PLUGINS&lt;/code&gt;
configuration variable in your Pelican&amp;nbsp;configuration.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;post_stats&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://github.com/getpelican/pelican-plugins/blob/master/post_stats/readme.rst"&gt;post_stats plugin&lt;/a&gt; requires the Python &lt;code&gt;beautifulsoup4&lt;/code&gt; package to be&amp;nbsp;installed.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;In addition, the &lt;code&gt;READING_TIME_LOWER_LIMIT&lt;/code&gt; configuration variable can be set to specify a
lower limit for this feature. If not supplied, the default value for this variable is 4&amp;nbsp;min.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;READING_TIME_LOWER_LIMIT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If the estimated reading time is less than or equal to &lt;code&gt;READING_TIME_LOWER_LIMIT&lt;/code&gt; value, the Reading Time section
will not be included for the&amp;nbsp;article.&lt;/p&gt;
&lt;p&gt;Given the default of &lt;code&gt;4&lt;/code&gt; for this variable, this section
will only be visible for articles that have an estimated reading time of 5 minutes or&amp;nbsp;more.&lt;/p&gt;</content><category term="Supported Plugins"></category><category term="reading time"></category><category term="stats"></category></entry><entry><title>Creating a Photo Gallery Article</title><link href="https://github.com/dvesti/Pelican/2019/06/09/how-to-use-photos-plugin/" rel="alternate"></link><published>2019-06-09T10:49:00+03:00</published><updated>2019-06-09T10:49:00+03:00</updated><author><name>Talha Mansoor</name></author><id>tag:github.com,2019-06-09:/dvesti/Pelican/2019/06/09/how-to-use-photos-plugin/</id><summary type="html">&lt;p&gt;Elegant can be configured to provide a simple display of a series of images, usually photos. Instead of asking the article&amp;#8217;s author to manually add a link for each photo, this feature provides basic gallery behavior with almost no cost to the&amp;nbsp;author.&lt;/p&gt;</summary><content type="html">
&lt;p&gt;In many cases, when an author writes an article and includes an image, there is a specific
reason that the image needs to be in that exact place. A good example of this is the image
at the end of this section, specifically part of this first section to give an early visual
on what visual change is contained within the article. However, in some cases, the author
wishes to provide a bit of preamble to a series of pictures, and then wants those pictures to
be displayed with little effort. This action is most frequently performed when an author
wants to share a series of photos on a given subject, similar to how they would display them
in a brick and mortar art gallery.&lt;/p&gt;
&lt;p&gt;Elegant provides for a simple, yet effective photo gallery that displays thumbnails, one for
each member of a set of images. These sets of images are defined by specifying a directory
containing the set of images to present to the reader. If that reader is then interested in
viewing one or more of the full images, clicking on the respective thumbnail creates a window
the size of the browser to display the image in. That window has a number of simple controls,
such as a close button, a previous image button and a next image button.&lt;/p&gt;
&lt;p&gt;Here is an example of what the Image Gallery section of such an article may look like:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Photo Gallery Demonstration" src="https://github.com/dvesti/Pelican/articles/images/elegant-theme_photo-gallery.png"/&gt;&lt;/p&gt;
&lt;p&gt;Note that the photo gallery itself will be placed at the end of any text presented for the article.&lt;/p&gt;
&lt;h2 id="configuration"&gt;Configuration&lt;a class="headerlink" href="#configuration" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To enable the Photo Gallery plugin, add &lt;code&gt;photos&lt;/code&gt; to the &lt;code&gt;PLUGINS&lt;/code&gt; configuration variable in
your Pelican configuration.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'photos'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://github.com/getpelican/pelican-plugins/blob/master/photos/README.md"&gt;photos plugin&lt;/a&gt; requires the Python &lt;code&gt;pillow&lt;/code&gt; package to be installed.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id="pelican-on-windows"&gt;Pelican on Windows&lt;a class="headerlink" href="#pelican-on-windows" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If you are running Pelican on a Windows machine, include the following configuration in your
&lt;code&gt;pelicanconf.py&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;PHOTO_RESIZE_JOBS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Due to known issues in the
&lt;a href="https://stackoverflow.com/questions/41385708/multiprocessing-example-giving-attributeerror"&gt;Windows implementation of Python&lt;/a&gt;
dealing with multiprocessing, a function being called within a multiprocessing context must be
written to a specific pattern. Currently, the Photo Plugins has not been written to that
pattern. Setting the &lt;code&gt;PHOTO_RESIZE_JOBS&lt;/code&gt; configuration variable to &lt;code&gt;-1&lt;/code&gt;
circumvents this issue by forcing the photo processing code to work in debug mode on a single
thread without invoking any of the multiprocessing code.&lt;/p&gt;
&lt;h2 id="article-metadata"&gt;Article Metadata&lt;a class="headerlink" href="#article-metadata" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Once the configuration for Photo Gallery is enabled in the configuration file, using this
feature for a given article requires that the article contains the &lt;code&gt;gallery&lt;/code&gt;
&lt;a href="https://github.com/dvesti/Pelican/2019/07/03/metadata/"&gt;metadata&lt;/a&gt; field value.&lt;/p&gt;
&lt;p&gt;The text assigned to the &lt;code&gt;gallery&lt;/code&gt; metadata field is the location of the directory where the
images to be displayed resides. This location is relative to the article in which the
&lt;code&gt;gallery&lt;/code&gt; metadata field is placed.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;gallery&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p p-Indicator"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;filename&lt;/span&gt;&lt;span class="p p-Indicator"&gt;}&lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;../gallery-source/dragondance&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the above example, the actual directory containing the images to display is the
&lt;code&gt;dragondance&lt;/code&gt; directory. While not specified in the example, the directory &lt;code&gt;articles&lt;/code&gt; and the
directory &lt;code&gt;gallery-source&lt;/code&gt; are at the same directory depth, one directory to contain articles
and one directory to contain galleries. By that convention, the article containing the
&lt;code&gt;gallery&lt;/code&gt; metadata is located in the the &lt;code&gt;articles&lt;/code&gt; directory. Therefore, the path to the
directory containing the &lt;code&gt;dragondance&lt;/code&gt; directory is &lt;code&gt;../gallery-source/&lt;/code&gt;. Together, the entire
path to the &lt;code&gt;dragondance&lt;/code&gt; directory from the article becomes &lt;code&gt;../gallery-source/dragondance&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id="photo-gallery-titles"&gt;Photo Gallery Titles&lt;a class="headerlink" href="#photo-gallery-titles" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Titles for a photo gallery are displayed in a large font directly above the first row of the
photo gallery. To specify the title for a gallery, add the required title to the metadata in
the &lt;code&gt;gallery&lt;/code&gt; metadata field within curly braces (‘{‘ and ‘}’) as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;gallery&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p p-Indicator"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;filename&lt;/span&gt;&lt;span class="p p-Indicator"&gt;}&lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;../gallery-source/dragondance{Dragon Dance}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="multiple-photo-galleries-in-the-same-article"&gt;Multiple Photo Galleries in the Same Article&lt;a class="headerlink" href="#multiple-photo-galleries-in-the-same-article" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Multiple photo galleries can be display, in order, within a single article. This is
accomplished by specify a comma separated list of photo galleries to display in the &lt;code&gt;gallery&lt;/code&gt;
metadata field. For example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;gallery&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p p-Indicator"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;filename&lt;/span&gt;&lt;span class="p p-Indicator"&gt;}&lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;../gallery-source/dragondance{Dragon Dance}, {filename}../gallery-source/hamsterdance{Hamster Dance}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;will display the title &lt;code&gt;Dragon Dance&lt;/code&gt;, the Dragon Dance photo gallery, the title
&lt;code&gt;Hamster Dance&lt;/code&gt;, and finally the Hamster Dance photo gallery. The title of the specific
photo gallery is not required, but when including multiple galleries, is often desired.&lt;/p&gt;
&lt;h1 id="advanced-configuration"&gt;Advanced Configuration&lt;a class="headerlink" href="#advanced-configuration" title="Permanent link"&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;div class="admonition warning"&gt;
&lt;p class="admonition-title"&gt;Warning&lt;/p&gt;
&lt;p&gt;Processing a quantity of photos in the 10,000s range can take multiple hours to complete. To reduce the effort needed to publish photo galleries, the &lt;code&gt;Photo&lt;/code&gt; plugin will only process images if the output file is not already present in the destination directory. For more information, please refer to the &lt;a href="https://github.com/dvesti/Pelican/2019/06/09/how-to-use-photos-plugin-advanced/#caching-processed-images"&gt;Caching Image Processing&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Using the above configuration, a photo gallery will be added to the end of the article
containing the &lt;code&gt;gallery&lt;/code&gt; metadata using default settings. For additional ways to use photo
galleries and for modifications to those default settings, please consult the sibling article
on
&lt;a href="https://github.com/dvesti/Pelican/2019/06/09/how-to-use-photos-plugin-advanced/"&gt;Advanced Configuration&lt;/a&gt; .&lt;/p&gt;</content><category term="Supported Plugins"></category><category term="pelican-theme"></category><category term="pelican-plugin"></category><category term="photo gallery"></category></entry><entry><title>Advanced Configuration for an Image Gallery Article</title><link href="https://github.com/dvesti/Pelican/2019/06/09/how-to-use-photos-plugin-advanced/" rel="alternate"></link><published>2019-06-09T10:49:00+03:00</published><updated>2019-06-09T10:49:00+03:00</updated><author><name>Talha Mansoor</name></author><id>tag:github.com,2019-06-09:/dvesti/Pelican/2019/06/09/how-to-use-photos-plugin-advanced/</id><summary type="html">&lt;p&gt;Elegant can be configured to provide a simple display of a series of images, usually photos. Instead of asking the author to manually add a link for each photo, this feature provides basic gallery behavior at low cost to the&amp;nbsp;author.&lt;/p&gt;</summary><content type="html">
&lt;h2 id="introduction"&gt;Introduction&lt;a class="headerlink" href="#introduction" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This article continues the documentation of the Photo Gallery configuration documented in the
article &lt;a href="https://github.com/dvesti/Pelican/2019/06/09/how-to-use-photos-plugin/"&gt;Creating a Photo Gallery Article&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;While getting started with a default photo gallery is relatively easy (one configuration
variable and a metadata field per article), enabling some of the more advanced features
requires a little more effort. This effort will allow for the inclusion of single gallery
photos into articles and the fine tuning of the image transformations used to render the
photos for the photo galleries and articles. Together these changes will give you the power
to customize your photo gallery to your requirements.&lt;/p&gt;
&lt;h2 id="including-gallery-photos-in-articles"&gt;Including Gallery Photos in Articles&lt;a class="headerlink" href="#including-gallery-photos-in-articles" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Prior to including single gallery photos in articles, the &lt;code&gt;PHOTO_LIBRARY&lt;/code&gt; configuration
variable must first be set to the full path of the directory containing all of the galleries.
For example, in the previous article,
&lt;a href="https://github.com/dvesti/Pelican/2019/06/09/how-to-use-photos-plugin/#article-metadata"&gt;Creating a Photo Gallery Article&lt;/a&gt;,
the gallery was added to the article as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;gallery&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p p-Indicator"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;filename&lt;/span&gt;&lt;span class="p p-Indicator"&gt;}&lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;../gallery-source/dragondance&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Assuming that you have installed a standard installation of Pelican in the directory
&lt;code&gt;/home/stuff/blog-content&lt;/code&gt; and inferring from the above metadata that all photo galleries are
located in the &lt;code&gt;content/gallery-source&lt;/code&gt; directory, the full path to the galleries should be as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;PHOTO_LIBRARY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/home/stuff/blog-content/website/content/gallery-source'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="adding-a-single-photos-to-an-article"&gt;Adding a Single Photos to an Article&lt;a class="headerlink" href="#adding-a-single-photos-to-an-article" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Once the above configuration has been completed, add a photo into the body of an article using
the following format: &lt;code&gt;{photo}folder/image.jpg&lt;/code&gt;. The &lt;code&gt;{photo}&lt;/code&gt; part of the format calls out
this image as part of a gallery, and instructs the &lt;code&gt;Photos&lt;/code&gt; plugin to resize a photo
specifically for use in articles. The &lt;code&gt;folder&lt;/code&gt; part refers to the folder representing the
gallery, and the &lt;code&gt;image.jpg&lt;/code&gt; is the filename of the photo within the &lt;code&gt;folder&lt;/code&gt; directory.&lt;/p&gt;
&lt;p&gt;For example, say you want to highlight one of the photos, &lt;code&gt;photo-1.jpg&lt;/code&gt;, that was contained
within the &lt;code&gt;dragondance&lt;/code&gt; gallery presented in your article. To include it in a Markdown
article, add the following text to the article:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;]({&lt;/span&gt;&lt;span class="n"&gt;photo&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="n"&gt;dragondance&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;photo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="n"&gt;jpg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In addition, using the prefix &lt;code&gt;{lightbox}&lt;/code&gt; instead of &lt;code&gt;{photo}&lt;/code&gt; will cause the thumbnail of the
photo to be displayed in the article. Clicking on the thumbnail will bring up the full sized
image from the photo gallery, similar to how it was displayed in the photo gallery.&lt;/p&gt;
&lt;h2 id="modifying-image-display-in-galleries"&gt;Modifying Image Display in Galleries&lt;a class="headerlink" href="#modifying-image-display-in-galleries" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There is a small amount of configuration that is available to modify how a single photo is
displayed in the galleries. These modifications include specifying captions for one or more
photos, specifying &lt;span class="caps"&gt;EXIF&lt;/span&gt; information for one or more photos, and specifying one or more photos
to not display as part of the gallery.&lt;/p&gt;
&lt;p&gt;All three of these modifications are controlled by text files that are located in the same
source directory as the photos. These text files provide extra information that is used when
the article containing the specified photo gallery is being generated.&lt;/p&gt;
&lt;p&gt;For the first two choices, there are two distinct files: &lt;code&gt;exif.txt&lt;/code&gt; and &lt;code&gt;captions.txt&lt;/code&gt;. In
both cases, the file format is simply the name of the image, a colon, and the information to
associate with the photo.&lt;/p&gt;
&lt;p&gt;For example, the information in the &lt;code&gt;exif.txt&lt;/code&gt; may be:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;best.jpg: Canon EOS 5D Mark II - 20mm f/8 1/250s ISO 100
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and the information in the &lt;code&gt;captions.txt&lt;/code&gt; file may be:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;best.jpg: My best photo ever! How lucky of me!
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Elegant will display both of these pieces of information at the bottom of the popup for an
individual image.&lt;/p&gt;
&lt;p&gt;To remove keep the photo file in a gallery, but not show it as part of the gallery, the
&lt;code&gt;blacklist.txt&lt;/code&gt; file is used. Even simpler than the previous two files, the file format is
simply the name of the photo to exclude, one photo to a line.&lt;/p&gt;
&lt;p&gt;For example, to keep the file &lt;code&gt;this-file-will-be-skipped.jpg&lt;/code&gt; in the gallery directory but not
display it as part of the gallery, the &lt;code&gt;blacklist.txt&lt;/code&gt; file would look like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;this-file-will-be-skipped.jpg
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="caching-processed-images"&gt;Caching Processed Images&lt;a class="headerlink" href="#caching-processed-images" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To reduce the need to reprocess images to fit into the gallery, article, and thumbnail sizes,
the &lt;code&gt;Photo&lt;/code&gt; plugin only processes images if the output file is not already present in the
destination directory. As such, to apply any configuration changes to images that have already
been processed, their destination images need to deleted from the relevant directories under
the &lt;code&gt;photos&lt;/code&gt; directory from the Pelican output.&lt;/p&gt;
&lt;p&gt;As both of the following sections change configuration variables that affect how the images
are processed, this note on caching applies to any changes of configuration variables
specified in the following sections.&lt;/p&gt;
&lt;h2 id="advanced-configuration-values"&gt;Advanced Configuration Values&lt;a class="headerlink" href="#advanced-configuration-values" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The definitive list of the values and their defaults is located on the
&lt;a href="https://github.com/getpelican/pelican-plugins/blob/master/photos/README.md"&gt;Photos Plugins&lt;/a&gt; webpage.&lt;/p&gt;
&lt;p&gt;The definitive list has been pared down, tested, and documented with specific focus on the
Elegant theme. Testing was performed using the list from the Photos Plugin webpage along
with the source code for the Photos Plugin. Any significant difference between the behavior
documented below and the definitive list is usually attributed to differences between the
source code and the documentation for the Photos Plugin.&lt;/p&gt;
&lt;p&gt;As a decent part of this information is presented after testing and research, please feel free
to contact us if you see different behavior than is documented here.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Configuration Name&lt;/th&gt;
&lt;th&gt;Default Value&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PHOTO_GALLERY&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;(1024, 768, 80)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Three attributes, describing the maximum width, the maximum height, and the quality of the resized image. The specific set of attributes applies to the maximum size of the photo displayed when the reader clicks on a gallery’s thumbnail image in the article. Note that the quality of the resized image only applies to &lt;span class="caps"&gt;JPG&lt;/span&gt; images.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PHOTO_ARTICLE&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;(760, 506, 80)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The same attributes as &lt;code&gt;PHOTO_GALLERY&lt;/code&gt;, but for the size of a photo from a gallery used in an article.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PHOTO_THUMB&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;(192, 144, 60)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The same attributes as &lt;code&gt;PHOTO_GALLERY&lt;/code&gt;, but for the size of the thumbnails used to show the contents of the gallery.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PHOTO_SQUARE_THUMB&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;False&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;This setting controls whether or not the thumbnails retain their aspect ratio when resized. If this setting is &lt;code&gt;True&lt;/code&gt;, the thumbnails will not retain their aspect ratio and will be cropped to fit into the rectangle defined by the &lt;code&gt;PHOTO_THUMB&lt;/code&gt; configuration variable.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PHOTO_RESIZE_JOBS&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Number of resize jobs to be run in parallel. If installed on a Windows machine, &lt;a href="https://github.com/dvesti/Pelican/2019/06/09/how-to-use-photos-plugin/#pelican-on-windows"&gt;read this&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PHOTO_WATERMARK&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;True&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Add a watermark to all photos in articles and pages. The watermarks added are controlled by the &lt;code&gt;PHOTO_WATERMARK_TEXT&lt;/code&gt; and &lt;code&gt;PHOTO_WATERMARK_IMG&lt;/code&gt; configuration variables described below. Note that if both are specified, both will be used.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PHOTO_WATERMARK_TEXT&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SITENAME&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Text to use for the watermark.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PHOTO_WATERMARK_TEXT_COLOR&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;(255, 255, 255)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Color of the text used for the watermark.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PHOTO_WATERMARK_IMG&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;''&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Full path to the image to use as a watermark.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PHOTO_WATERMARK_IMG_SIZE&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;False&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Size to apply to the watermark image, expressed as &lt;code&gt;(width,height)&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="jpg-specific-exif-configuration-values"&gt;&lt;span class="caps"&gt;JPG&lt;/span&gt; Specific &lt;span class="caps"&gt;EXIF&lt;/span&gt; Configuration Values&lt;a class="headerlink" href="#jpg-specific-exif-configuration-values" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://github.com/getpelican/pelican-plugins/blob/master/photos/README.md"&gt;photos plugin&lt;/a&gt; requires the Python &lt;code&gt;piexif&lt;/code&gt; package to provide control over any &lt;a href="https://photographylife.com/what-is-exif-data"&gt;&lt;span class="caps"&gt;EXIF&lt;/span&gt;&lt;/a&gt; information in the images.&lt;/p&gt;
&lt;/div&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Configuration Name&lt;/th&gt;
&lt;th&gt;Default Value&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PHOTO_EXIF_KEEP&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;False&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Keep the &lt;span class="caps"&gt;EXIF&lt;/span&gt; information from the input photo.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PHOTO_EXIF_REMOVE_GPS&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;False&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Remove any &lt;span class="caps"&gt;EXIF&lt;/span&gt; &lt;span class="caps"&gt;GPS&lt;/span&gt; information from the photos.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PHOTO_EXIF_AUTOROTATE&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;True&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Use the &lt;span class="caps"&gt;EXIF&lt;/span&gt; orientation field to determine how to rotate the photo so all photos are in a standard orientation.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PHOTO_EXIF_COPYRIGHT&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;False&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;If not &lt;code&gt;False&lt;/code&gt; and no existing copyright information is provided in the image, attach an author and license to the file. Choices include: - &lt;span class="caps"&gt;COPYRIGHT&lt;/span&gt;, &lt;a href="https://creativecommons.org/share-your-work/public-domain/cc0/"&gt;&lt;span class="caps"&gt;CC0&lt;/span&gt;&lt;/a&gt;, &lt;a href="https://creativecommons.org/licenses/by-nc-nd/2.0/"&gt;&lt;span class="caps"&gt;CC&lt;/span&gt;-&lt;span class="caps"&gt;BY&lt;/span&gt;-&lt;span class="caps"&gt;NC&lt;/span&gt;-&lt;span class="caps"&gt;ND&lt;/span&gt;&lt;/a&gt;, &lt;a href="https://creativecommons.org/licenses/by-nc-sa/3.0/"&gt;&lt;span class="caps"&gt;CC&lt;/span&gt;-&lt;span class="caps"&gt;BY&lt;/span&gt;-&lt;span class="caps"&gt;NC&lt;/span&gt;-&lt;span class="caps"&gt;SA&lt;/span&gt;&lt;/a&gt;, &lt;a href="https://creativecommons.org/licenses/by/4.0"&gt;&lt;span class="caps"&gt;CC&lt;/span&gt;-&lt;span class="caps"&gt;BY&lt;/span&gt;&lt;/a&gt;, &lt;a href="https://creativecommons.org/licenses/by-sa/4.0"&gt;&lt;span class="caps"&gt;CC&lt;/span&gt;-&lt;span class="caps"&gt;BY&lt;/span&gt;-&lt;span class="caps"&gt;SA&lt;/span&gt;&lt;/a&gt;, &lt;a href="https://creativecommons.org/licenses/by-nc/4.0/"&gt;&lt;span class="caps"&gt;CC&lt;/span&gt;-&lt;span class="caps"&gt;BY&lt;/span&gt;-&lt;span class="caps"&gt;NC&lt;/span&gt;&lt;/a&gt;, &lt;a href="https://creativecommons.org/licenses/by-nd/4.0"&gt;&lt;span class="caps"&gt;CC&lt;/span&gt;-&lt;span class="caps"&gt;BY&lt;/span&gt;-&lt;span class="caps"&gt;ND&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PHOTO_EXIF_COPYRIGHT_AUTHOR&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SITENAME&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;If &lt;code&gt;PHOTO_EXIF_COPYRIGHT&lt;/code&gt; is not &lt;code&gt;False&lt;/code&gt; and no copyright author is present in the image, use this value as the author.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</content><category term="Supported Plugins"></category><category term="pelican-theme"></category><category term="pelican-plugin"></category><category term="photo gallery"></category></entry><entry><title>Add Author Blurbs to Your Articles</title><link href="https://github.com/dvesti/Pelican/2018/12/07/adding-author-blurbs/" rel="alternate"></link><published>2018-12-07T11:00:00+02:00</published><updated>2018-12-07T11:00:00+02:00</updated><author><name>Talha Mansoor</name></author><id>tag:github.com,2018-12-07:/dvesti/Pelican/2018/12/07/adding-author-blurbs/</id><summary type="html">&lt;p&gt;Elegant can be configured to provide author blurbs for articles, relaying extra information on the authors of the&amp;nbsp;articles.&lt;/p&gt;</summary><content type="html">
&lt;p&gt;On websites where the author of an article may vary, many sites include a quick blurb about
the author with the article. This blurb will typically be at the start of the article or the
end of the article, and provides extra information for readers on the author.&lt;/p&gt;
&lt;p&gt;Elegant provides
this feature, adding a section for any recognized articles at the end of the article.&lt;/p&gt;
&lt;p&gt;Here are two examples of what the Author Blurbs may look like:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Author Blurb 1" src="https://github.com/dvesti/Pelican/images/author-blurb.png"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Author Blurb 2" src="https://github.com/dvesti/Pelican/images/author-blurb2.png"/&gt;&lt;/p&gt;
&lt;h2 id="configuration"&gt;Configuration&lt;a class="headerlink" href="#configuration" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To enable author blurbs for your articles, you need to define an &lt;code&gt;AUTHORS&lt;/code&gt; configuration variable
in your Pelican configuration. The &lt;code&gt;AUTHORS&lt;/code&gt; configuration variable for the Elegant
documentation website is specified as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;AUTHORS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"Talha Mansoor"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"https://www.oncrashreboot.com/"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"blurb"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"is the creator and lead developer of Elegant theme."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"avatar"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"/images/avatars/talha131.png"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s2"&gt;"Pablo Iranzo Gómez"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"http://iranzo.github.io"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"blurb"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;" opensource enthusiast and Lego fan doing some python simple programs like @redken_bot in telegram, etc"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"avatar"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"https://avatars.githubusercontent.com/u/312463"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s2"&gt;"Jack De Winter"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"http://jackdewinter.github.io"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"blurb"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"ever evolving, ever learning"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The value assigned to the configuration variable is a Python dictionary&lt;sup id="fnref:python-dictionary"&gt;&lt;a class="footnote-ref" href="#fn:python-dictionary"&gt;1&lt;/a&gt;&lt;/sup&gt;
containing one key-value pair for every author. The key for the key-value pair is the name of
the author as you want it to appear at the end of the article. In the example, the three
authors are “Talha Mansoor”, “Pablo Iranzo Gómez”, and “Jack De Winter”.&lt;/p&gt;
&lt;p&gt;The value for each of the key-value pairs is another dictionary. Elegant specifically looks
for these three keys in the each author’s dictionary:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;url&lt;/code&gt; (string) &lt;span class="caps"&gt;URL&lt;/span&gt; to the author’s homepage or profile&lt;/li&gt;
&lt;li&gt;&lt;code&gt;blurb&lt;/code&gt; (string) Introduction of author&lt;/li&gt;
&lt;li&gt;&lt;code&gt;avatar&lt;/code&gt; (string) &lt;span class="caps"&gt;URL&lt;/span&gt; to author’s avatar image&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For the &lt;code&gt;url&lt;/code&gt; and &lt;code&gt;avatar&lt;/code&gt; values, there is no restriction on where the &lt;span class="caps"&gt;URL&lt;/span&gt; links to. In the
above example, Talha’s &lt;code&gt;avatar&lt;/code&gt; &lt;span class="caps"&gt;URL&lt;/span&gt; is local, while Pablo’s &lt;span class="caps"&gt;URL&lt;/span&gt; is remote.&lt;/p&gt;
&lt;h2 id="article-metadata"&gt;Article Metadata&lt;a class="headerlink" href="#article-metadata" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;While the configuration for Author Blurbs is centralized in the configuration file, enabling
this feature for a given article requires that the article contains either the &lt;code&gt;author&lt;/code&gt; or
&lt;code&gt;authors&lt;/code&gt; &lt;a href="https://github.com/dvesti/Pelican/2019/07/03/metadata/"&gt;metadata&lt;/a&gt; field values. If neither
of these values are provided, the &lt;code&gt;AUTHOR&lt;/code&gt; configuration variable will be used as a default.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;AUTHOR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Pablo Iranzo Gómez'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The default &lt;code&gt;AUTHOR&lt;/code&gt; configuration variable and the &lt;code&gt;author&lt;/code&gt; metadata field both denote a
single author. The &lt;code&gt;authors&lt;/code&gt; metadata field denotes multiple authors using a comma separated list.&lt;/p&gt;
&lt;p&gt;For each author determined through in this manner, a check is performed against the &lt;code&gt;AUTHORS&lt;/code&gt;
configuration in the previous section on &lt;a href="#Configuration"&gt;Configuration&lt;/a&gt;. If the author is
found using a case-sensitive exact match, a blurb will be generated for that author. If the
author is not found, it will be silently ignored.&lt;/p&gt;
&lt;p&gt;A good example of the &lt;code&gt;authors&lt;/code&gt; metadata field is available by looking at the
&lt;a href="https://raw.githubusercontent.com/Pelican-Elegant/elegant/master/documentation/content/Supported%20Plugins/author-blurbs.md"&gt;raw Markdown&lt;/a&gt; for this page.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;Authors&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;Talha Mansoor, Jack De Winter&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="admonition warning"&gt;
&lt;p class="admonition-title"&gt;Common Mistake&lt;/p&gt;
&lt;p&gt;A frequent mistake is to define multiple authors, but assign the value to the &lt;code&gt;author&lt;/code&gt; metadata field.  This can happen easily if one author writes the original version of the article and another author updates or changes that article.  This mistake causes Elegant to look for that &lt;em&gt;single&lt;/em&gt; author using the entire text for that value.&lt;/p&gt;
&lt;p&gt;The correct way to do this is to use &lt;code&gt;authors&lt;/code&gt; metadata field.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="footnote"&gt;
&lt;hr/&gt;
&lt;ol&gt;
&lt;li id="fn:python-dictionary"&gt;
&lt;p&gt;For more information on Python dictionaries, refer to this comprehensive article on &lt;a href="https://realpython.com/python-dicts/"&gt;Python dictionaries&lt;/a&gt;. &lt;a class="footnote-backref" href="#fnref:python-dictionary" title="Jump back to footnote 1 in the text"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="Supported Plugins"></category><category term="web-design"></category><category term="metadata"></category><category term="authors"></category></entry><entry><title>Displaying a Series Information for Your Multipart Articles</title><link href="https://github.com/dvesti/Pelican/2014/04/20/how-to-use-multi-part-plugin/" rel="alternate"></link><published>2014-04-20T18:18:00+03:00</published><updated>2014-04-20T18:18:00+03:00</updated><author><name>Talha Mansoor</name></author><id>tag:github.com,2014-04-20:/dvesti/Pelican/2014/04/20/how-to-use-multi-part-plugin/</id><summary type="html">&lt;p&gt;Elegant can be configured to provide a series section on the right sidebar. Only visible in articles that are labelled as part of a series, this indicator allows navigation between the articles in the&amp;nbsp;series.&lt;/p&gt;</summary><content type="html">&lt;div class="admonition important"&gt;
&lt;p class="admonition-title"&gt;Deprecation&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;multi-part&lt;/code&gt; plugin has been deprecated in favor of the &lt;code&gt;series&lt;/code&gt;
plugin. For an up-to-date article on using the &lt;code&gt;series&lt;/code&gt; plugin, &lt;a href="https://github.com/dvesti/Pelican/2019/12/07/how-to-use-series-plugin/"&gt;go
here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;When writing articles about certain topics, it is advantageous to split a single article into
multiple articles. Without splitting the article up, the author would be forced to cram all
of the content into a denser and much longer article, reducing its effectiveness and
readability in the process. Splitting the article allows the author to focus on a specific
concept of the larger article, thereby increasing the overall appearance and&amp;nbsp;readability.&lt;/p&gt;
&lt;p&gt;Elegant provides the ability to present a view of the articles in the series in the middle of
the right sidebar. This section starts with the name of the series, followed by one bullet
point for each of the articles in the series. The text for the article is prefaced with
&amp;#8220;Part N: &amp;#8221; (where N is the index of the article) and then the title for the article. To make
navigation easier, the current article is presented in italics, with the other articles being
presented as links to their respective&amp;nbsp;articles.&lt;/p&gt;
&lt;p&gt;Here is an example of what the Series section may look&amp;nbsp;like:&lt;/p&gt;
&lt;p&gt;&lt;img alt="series example in the sidebar" src="https://github.com/dvesti/Pelican/images/elegant-theme_multi-part-sidebar.png" /&gt;&lt;/p&gt;
&lt;h2 id="configuration"&gt;Configuration&lt;a class="headerlink" href="#configuration" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To enable the reading time for your articles, you need to add &lt;code&gt;multi-part&lt;/code&gt; to the &lt;code&gt;PLUGINS&lt;/code&gt;
configuration variable in your Pelican&amp;nbsp;configuration.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;multi-part&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In addition, the &lt;code&gt;SERIES_TITLE&lt;/code&gt; configuration variable can be set to specify the title used for
the Series section, regardless of the&amp;nbsp;series.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;SERIES_TITLE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;More In This Series&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="article-metadata"&gt;Article Metadata&lt;a class="headerlink" href="#article-metadata" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Once the configuration for Series is enabled in the configuration file, using this feature for
a given set of articles requires that the article contains the &lt;code&gt;series&lt;/code&gt;
&lt;a href="https://github.com/dvesti/Pelican/2019/07/03/metadata/"&gt;metadata&lt;/a&gt; field&amp;nbsp;value.&lt;/p&gt;
&lt;p&gt;The text assigned to the &lt;code&gt;series&lt;/code&gt; metadata field is the title of the series. When the page is
created, Pelican provides Elegant with a list of all pages that have the same value for the
&lt;code&gt;series&lt;/code&gt; metadata field. By default, Elegant sorts that list according to the publish date for
each article. The titles for those pages is then displayed in sorted order, with the current
page presented in &lt;em&gt;italics&lt;/em&gt; and the other pages presented as a link to those&amp;nbsp;pages.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;series&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Maximizing&lt;/span&gt; &lt;span class="n"&gt;Elegant&lt;/span&gt;
&lt;span class="n"&gt;series_index&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If there is a reason to override the ordering of the articles, the &lt;code&gt;series_index&lt;/code&gt; metadata
field is required. It is recommended that you use the part number you want displayed for the
article as the value to assign to the&amp;nbsp;field.&lt;/p&gt;</content><category term="Supported Plugins"></category><category term="pelican-plugin"></category><category term="navigation"></category><category term="web-design"></category><category term="deprecated"></category></entry><entry><title>Add Social Sharing Links</title><link href="https://github.com/dvesti/Pelican/2014/03/24/how-to-use-social-sharing-plugin/" rel="alternate"></link><published>2014-03-24T20:14:00+02:00</published><updated>2014-03-24T20:14:00+02:00</updated><author><name>Talha Mansoor</name></author><id>tag:github.com,2014-03-24:/dvesti/Pelican/2014/03/24/how-to-use-social-sharing-plugin/</id><summary type="html">&lt;p&gt;Elegant can be configured to provide Social Media sharing links for each of your articles. These links provide a simple way to share on various Social Media platforms while endeavoring to not track users in the&amp;nbsp;process.&lt;/p&gt;</summary><content type="html">&lt;p&gt;No blog is complete without buttons or links that invites a reader to share your articles
with the friend and colleagues on various social media sites. The problem with these buttons
on many sites is that the buttons are used by big companies to track your web usage, sharing
that information with various companies. (For a more in-depth talk on this subject, please
read the &lt;a href="#Online-Trackers-and-Links"&gt;Online Trackers and Links&lt;/a&gt; section at the end of this&amp;nbsp;page.)&lt;/p&gt;
&lt;p&gt;Elegant provides a simple solution to this, using the &lt;code&gt;Share Post&lt;/code&gt; plugin from pelican to
provide simple and plain old-school URLs to provide the social media links. These have the
benefit of not having any ability to be used for online&amp;nbsp;tracking.&lt;/p&gt;
&lt;p&gt;Here is an example of what the Social Media Sharing section may look&amp;nbsp;like:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Share Post plugin in Elegant" src="https://github.com/dvesti/Pelican/images/elegant-theme-share-post-plugin.png" /&gt;&lt;/p&gt;
&lt;h2 id="configuration"&gt;Configuration&lt;a class="headerlink" href="#configuration" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To enable the Social Media Sharing links for your articles, add &lt;code&gt;share_post&lt;/code&gt; to the &lt;code&gt;PLUGINS&lt;/code&gt;
configuration variable in your Pelican&amp;nbsp;configuration.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;share_post&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Optionally, customize the list of networks where the article can be shared using &lt;code&gt;SHARE_LINKS&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;SHARE_LINKS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;twitter&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Twitter&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;facebook&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Facebook&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;email&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Email&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The first item in each pair refers to a network recognized by &lt;code&gt;share_post&lt;/code&gt;. Currently the list of supported networks includes &lt;code&gt;twitter&lt;/code&gt;, &lt;code&gt;facebook&lt;/code&gt;, &lt;code&gt;email&lt;/code&gt;, &lt;code&gt;hacker-news&lt;/code&gt;, &lt;code&gt;linkedin&lt;/code&gt; and &lt;code&gt;reddit&lt;/code&gt;. The second item in each pair is the text displayed for the link on the&amp;nbsp;page.&lt;/p&gt;
&lt;p&gt;The sharing links are displayed in the order of &lt;code&gt;SHARE_LINKS&lt;/code&gt;, therefore this variable can also be used to customize the link&amp;nbsp;order.&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://github.com/getpelican/pelican-plugins/blob/master/share_post/README.md"&gt;share_post plugin&lt;/a&gt; requires the Python &lt;code&gt;beautifulsoup4&lt;/code&gt; package to be&amp;nbsp;installed.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The default text used to lead into the Social Media Sharing links is &amp;#8220;Share On:&amp;#8221;. This can
be overridden by defining the &lt;code&gt;SHARE_POST_INTRO&lt;/code&gt; configuration variable with the text you
want to replace&amp;nbsp;it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;SHARE_POST_INTRO&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Share me with your friends on&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="article-metadata"&gt;Article Metadata&lt;a class="headerlink" href="#article-metadata" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Once the configuration for Sharing Media Links is enabled in the configuration file, using
this feature to provide links for your readers to share your articles on social media is&amp;nbsp;completed.&lt;/p&gt;
&lt;p&gt;The only effect any &lt;a href="https://github.com/dvesti/Pelican/2019/07/03/metadata/"&gt;metadata&lt;/a&gt; field will have
on Sharing Media links is to change the text to lead into the Social Media Sharing links.
As documented above, the &lt;code&gt;SHARE_POST_INTRO&lt;/code&gt; can be used to provide an alternate lead in text
for the Social Media Sharing links. This text can be further overridden on an
article-by-article basis by specifying the &lt;code&gt;share_post_intro&lt;/code&gt; metadata field value for an
article as&amp;nbsp;follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;share_post_intro&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;Share this article on Elegant with&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="online-trackers-and-links"&gt;Online Trackers and Links&lt;a class="headerlink" href="#online-trackers-and-links" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There are a plethora of social sharing widgets available online. The unfortunate problem with
most of the widgets is that they are used to track users and their browsing habits.
&lt;a href="http://techliberation.com/2011/05/20/privacy-solutions-how-to-block-facebooks-like-button-and-other-social-widgets/"&gt;Technology watchdogs&lt;/a&gt;
have been
&lt;a href="http://online.wsj.com/news/articles/SB10001424052748704281504576329441432995616#printMode"&gt;raising a hue and cry&lt;/a&gt;
since as
&lt;a href="https://www.eff.org/deeplinks/2009/09/online-trackers-and-social-networks"&gt;early as 2009&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Developers have responded to these concerned by coming up with
&lt;a href="http://fixtracking.com/"&gt;different ways&lt;/a&gt; to cope with this issue. The solutions range from
custom &lt;a href="https://disconnect.me/"&gt;browser plugins&lt;/a&gt; to completely totally
&lt;a href="http://panzi.github.io/SocialSharePrivacy/"&gt;reinventing share widgets&lt;/a&gt; for a given browser.
However, it is unreasonable to expect that each of your visitors uses a privacy plugin.
Depending on your setup, your computer&amp;#8217;s browser or mobile phone&amp;#8217;s browser may not let your
users install any kind of&amp;nbsp;plugin.&lt;/p&gt;
&lt;p&gt;Reinventing a social widget that respects the user&amp;#8217;s concerns will certainly requiring the more
educated readers about it. For other readers, the &amp;#8220;new&amp;#8221; or &amp;#8220;changed&amp;#8221; social widget will seem
alien to them, and will make them hesitant to use it. In turn, that will almost definitely
result in a decrease in the number of shares of your articles on social&amp;nbsp;networks.&lt;/p&gt;
&lt;p&gt;Pelican (and therefore Elegant) uses a simple approach to work around this issue. By using
plain URLs to provide it&amp;#8217;s ability to share with social media sites, the entire widget issue
is&amp;nbsp;avoided.&lt;/p&gt;</content><category term="Supported Plugins"></category><category term="pelican-theme"></category><category term="pelican-plugin"></category><category term="social-media"></category></entry><entry><title>How To Improve the Download Time For Your Pages</title><link href="https://github.com/dvesti/Pelican/2014/03/24/avoid-unnecessary-http-requests/" rel="alternate"></link><published>2014-03-24T14:09:00+02:00</published><updated>2014-03-24T14:09:00+02:00</updated><author><name>Talha Mansoor</name></author><id>tag:github.com,2014-03-24:/dvesti/Pelican/2014/03/24/avoid-unnecessary-http-requests/</id><summary type="html">&lt;p&gt;Pelican can be configured to compile multiple assets for your website into one single asset. When these assets are combined together, they are reduce to only their necessary components, and can be fetched by the browser in a single&amp;nbsp;call.&lt;/p&gt;</summary><content type="html">&lt;p&gt;When a webpage is created, webpage authors and static page generators will often grab
low-level asset files from a trusted location. Between Pelican and Elegant, these files will
often number between 8 and 15 &lt;span class="caps"&gt;CSS&lt;/span&gt; or JavaScript files. While these files are
essential to the proper look and feel of a properly designed website, the overhead of this
content being in separate files is that separate requests are made for each of them to the&amp;nbsp;server.&lt;/p&gt;
&lt;div class="admonition important"&gt;
&lt;p class="admonition-title"&gt;Important&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Elegant comes with a compressed and concatenated &lt;span class="caps"&gt;CSS&lt;/span&gt; stylesheet&lt;/strong&gt;, so that only one request is made to fetch the &lt;span class="caps"&gt;CSS&lt;/span&gt; stylesheets. &lt;strong&gt;Following instruction is redundant for most&amp;nbsp;users.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;But if you have decided to &lt;a href="https://github.com/dvesti/Pelican/2019/07/03/customize-style/"&gt;customize the theme using &lt;code&gt;custom.css&lt;/code&gt;&lt;/a&gt; then follow these&amp;nbsp;instruction.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Pelican provides a plugin that takes the various &lt;span class="caps"&gt;CSS&lt;/span&gt; and JavaScript files and compiles each
group of them into a single file. Not only does this process reduce the number of calls to
retrieve files from the server, but it minifies or reduces the overall size of
those files as&amp;nbsp;well.&lt;/p&gt;
&lt;h2 id="configuration"&gt;Configuration&lt;a class="headerlink" href="#configuration" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To enable Asset Management for your website, add &lt;code&gt;assets&lt;/code&gt; to the &lt;code&gt;PLUGINS&lt;/code&gt; configuration
variable in your Pelican&amp;nbsp;configuration.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;assets&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://github.com/getpelican/pelican-plugins/blob/master/assets/Readme.rst"&gt;assets plugin&lt;/a&gt; requires the Python &lt;code&gt;webassets&lt;/code&gt; and &lt;code&gt;cssmin&lt;/code&gt; packages to be&amp;nbsp;installed.&lt;/p&gt;
&lt;/div&gt;</content><category term="Supported Plugins"></category><category term="pelican-theme"></category><category term="pelican-plugin"></category><category term="page-speed"></category></entry><entry><title>Add Previous and Next Article Links</title><link href="https://github.com/dvesti/Pelican/2014/01/27/how-to-show-previous-and-next-article/" rel="alternate"></link><published>2014-01-27T00:02:00+02:00</published><updated>2014-01-27T00:02:00+02:00</updated><author><name>Talha Mansoor</name></author><id>tag:github.com,2014-01-27:/dvesti/Pelican/2014/01/27/how-to-show-previous-and-next-article/</id><summary type="html">&lt;p&gt;Elegant can be configured to provide a Previous and Next article link at the bottom of your articles. This allows for easier navigation through the site if you are looking at articles in published date&amp;nbsp;order.&lt;/p&gt;</summary><content type="html">&lt;p&gt;When reading a series of articles on a website, a reader often desires to view the articles in
chronological order by publish&amp;nbsp;date.&lt;/p&gt;
&lt;p&gt;Elegant provides the ability to provide navigation links to the previous and next articles at
the bottom of each article. These links provide a powerful way to keep visitors engaged
and guide them through your&amp;nbsp;site.&lt;/p&gt;
&lt;p&gt;Here is an example of what the Previous and Next Articles section may look&amp;nbsp;like:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Show next and previous articles" src="https://github.com/dvesti/Pelican/images/elegant-theme_previous-next-article.png" /&gt;&lt;/p&gt;
&lt;h2 id="configuration"&gt;Configuration&lt;a class="headerlink" href="#configuration" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To enable the Previous and Next Article links for your articles, add &lt;code&gt;neighbors&lt;/code&gt; to the
&lt;code&gt;PLUGINS&lt;/code&gt; configuration variable in your Pelican&amp;nbsp;configuration.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;neighbors&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;When enabled, Elegant will show the links for Previous and Next articles at the very bottom of
every article, after any footnotes for the article, but before the footer for the website. The
link for the next oldest or Previous article is displayed on the left side and the next
youngest or Next article on the right side, being consistent with most languages being
Left-to-Right language. If there is no article that is newer or older than the current article,
the respective link will not be&amp;nbsp;shown.&lt;/p&gt;</content><category term="Supported Plugins"></category><category term="pelican-plugin"></category><category term="navigation"></category><category term="web-design"></category></entry></feed>