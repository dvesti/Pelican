<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Pelican-200 - 101 — Quick Start</title><link href="https://dvesti.github.io/Pelican/" rel="alternate"></link><link href="https://dvesti.github.io/Pelican/feeds/101-quick-start.atom.xml" rel="self"></link><id>https://dvesti.github.io/Pelican/</id><updated>2019-12-06T00:00:00+02:00</updated><subtitle>The Best Pelican Theme</subtitle><entry><title>Updating Elegant To the Latest Release</title><link href="https://dvesti.github.io/Pelican/2019/12/06/updating-elegant-to-the-latest-release/" rel="alternate"></link><published>2019-12-06T00:00:00+02:00</published><updated>2019-12-06T00:00:00+02:00</updated><author><name>Jack De Winter</name></author><id>tag:dvesti.github.io,2019-12-06:/Pelican/2019/12/06/updating-elegant-to-the-latest-release/</id><summary type="html">&lt;p&gt;Once you have determined that you want to update to the latest release of Elegant, the
process is usually quite simple. There are wo main ways to get the Elegant theme: as
a standalone repository and as part of the Pelican-Themes&amp;nbsp;repository.&lt;/p&gt;
&lt;h2 id="via-the-pelican-themes-repository"&gt;Via the Pelican-Themes Repository&lt;a class="headerlink" href="#via-the-pelican-themes-repository" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you installed the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Once you have determined that you want to update to the latest release of Elegant, the
process is usually quite simple. There are wo main ways to get the Elegant theme: as
a standalone repository and as part of the Pelican-Themes&amp;nbsp;repository.&lt;/p&gt;
&lt;h2 id="via-the-pelican-themes-repository"&gt;Via the Pelican-Themes Repository&lt;a class="headerlink" href="#via-the-pelican-themes-repository" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you installed the Elegant theme as part of the Pelican-Themes repository, all of
the themes available in that project will be located at a level one down from the
directory where you installed the repository into. For example, if you installed
the repository with the following&amp;nbsp;command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone --recursive https://github.com/getpelican/pelican-themes ../blog-themes
&lt;span class="nb"&gt;cd&lt;/span&gt; ../blog-themes
git submodule update --init elegant
git submodule update --remote elegant
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;it installed every theme known to the project in the current directory where the command
was executed from. Along with (at last count) 125 other themes, the Elegant theme is
located under the &lt;code&gt;elegant&lt;/code&gt; directory.&lt;/p&gt;
&lt;h2 id="replacing-with-the-pelican-themes-repository"&gt;Replacing With the Pelican-Themes Repository&lt;a class="headerlink" href="#replacing-with-the-pelican-themes-repository" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Elegant theme is included into the Pelican-Themes project by using a git concept
called sub-modules. Because of the ways that sub-modules work, if you want to update
one sub-module in a project, it is almost always desired to remove the sub-module that
you want to update and clone it in again. This is accomplished with the following&amp;nbsp;script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rm -rf ../blog-themes/elegant
git clone --jobs &lt;span class="m"&gt;8&lt;/span&gt; --recurse-submodules --depth &lt;span class="m"&gt;1&lt;/span&gt; --shallow-submodules https://github.com/Pelican-Elegant/elegant.git ../blog-themes/elegant
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Assuming the &lt;code&gt;blog-themes&lt;/code&gt; directory is at the same level as your Pelican directory, the
script removes the Elegant directory under the &lt;code&gt;blog-themes&lt;/code&gt; directory, only to recreate
it using the &lt;code&gt;git clone&lt;/code&gt; command on the next&amp;nbsp;line.&lt;/p&gt;
&lt;p&gt;Note that this also has the benefit of updating your Elegant theme to the latest theme
based on Elegant&amp;#8217;s repository, instead of relying on the Pelican-Themes repository.
There is often a lag between when a release is made in Elegant&amp;#8217;s repository and when
it is available &amp;#8220;automatically&amp;#8221; through the Pelican-Themes repository. By using this
method of updating the repository, you keep the directory structure of the Pelican-Themes
repository while making sure you have the latest release of&amp;nbsp;Elegant.&lt;/p&gt;
&lt;h2 id="via-a-standalone-repository"&gt;Via a Standalone Repository&lt;a class="headerlink" href="#via-a-standalone-repository" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you installed the Elegant theme as a standalone repository, you most likely followed
directions like the following to clone the Elegant&amp;nbsp;repository:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir ../blog-theme/Elegant
git clone https://github.com/Pelican-Elegant/elegant ../blog-theme/Elegant
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For this example, the assumption is that the Pelican directory where your website is
stored is at the same level as the &lt;code&gt;blog-theme&lt;/code&gt; directory. As such, the &lt;code&gt;../blog-theme&lt;/code&gt;
part of the path gets us to the theme part of the directory tree. It is possible to just
leave the path at that, but it is recommended to add the &lt;code&gt;/Elegant&lt;/code&gt; at the end as a
reminder of the repository&amp;nbsp;name.&lt;/p&gt;
&lt;p&gt;If the Elegant theme was installed in this manner, you can either update your local
repository or recreate your repository as noted in the following two&amp;nbsp;sections.&lt;/p&gt;
&lt;h3 id="updating-a-standalone-theme"&gt;Updating a Standalone Theme&lt;a class="headerlink" href="#updating-a-standalone-theme" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;master&lt;/code&gt; branch of Elegant&amp;#8217;s Git repository always contains the latest release. To
update to that release, go into the Elegant theme directory (&lt;code&gt;../blog-theme/Elegant&lt;/code&gt;
from the example above), and enter the following&amp;nbsp;command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git pull origin master
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note that this is the most effective way of updating your standalone repository if you
have not made any changes to the the theme. If you have made some changes, you may be
required to merge the changes in your local repository with any changes in the release
version you pulled down with this&amp;nbsp;command.&lt;/p&gt;
&lt;h3 id="recreate-a-standalone-theme"&gt;Recreate a Standalone Theme&lt;a class="headerlink" href="#recreate-a-standalone-theme" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If you are lucky, you will not reach a time where you believe, even a tiny bit, that you
have messed up the contents of your theme repository. If you have made any changes to the
base Elegant theme, it is inevitable that at some point you will need to reset the
repository to a known good state. Assuming that the repository is in the directory
&lt;code&gt;../blog-theme/Elegant&lt;/code&gt;, per the example above, executing the following&amp;nbsp;command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rmdir -rf ../blog-theme/Elegant
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;will remove the entire theme from your local system. Once this is done, you can follow
the clone directions in the example at the top of this section on standalone
repositories to restore the Elegant theme directory to the same state as Elegant&amp;#8217;s
master branch on&amp;nbsp;GitHub.&lt;/p&gt;
&lt;h3 id="using-the-tasks-framework"&gt;Using The Tasks Framework&lt;a class="headerlink" href="#using-the-tasks-framework" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;div class="admonition warning"&gt;
&lt;p class="admonition-title"&gt;Windows&amp;nbsp;Users&lt;/p&gt;
&lt;p&gt;The tasks framework is set up with commands for a Linux system. If you intend to use the tasks framework on your Windows system, a number of changes will be required.  If you feel like helping us out with this, we will gladly accept a &lt;span class="caps"&gt;PR&lt;/span&gt; to address&amp;nbsp;this!&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;If you are using the Python &lt;code&gt;invoke&lt;/code&gt; framework, then this work is already done for you by
using the &lt;code&gt;theme_sync&lt;/code&gt; task in &lt;code&gt;documentation/tasks.py&lt;/code&gt; file. The &lt;code&gt;invoke&lt;/code&gt; package can
be installed in the usual&amp;nbsp;manner:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install invoke
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Once installed, typing &lt;code&gt;invoke theme_sync&lt;/code&gt; will execute that task as defined in the
file &lt;code&gt;tasks.py&lt;/code&gt; as&amp;nbsp;follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nd"&gt;@task&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;theme_sync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Make a fresh shallow copy of pelican-elegant theme&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;rm -rf themes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;git clone --jobs 8 --recurse-submodules --depth 1 --shallow-submodules https://github.com/Pelican-Elegant/elegant.git themes/elegant&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note that this script makes a couple of assumptions about where you are invoking the
task from and where you have your themes stored. If you are okay with that, give it a&amp;nbsp;try!&lt;/p&gt;</content><category term="101 — Quick Start"></category><category term="pelican-theme"></category><category term="new-releases"></category></entry><entry><title>Getting Notified About New Releases</title><link href="https://dvesti.github.io/Pelican/2019/12/05/getting-notified-about-new-releases/" rel="alternate"></link><published>2019-12-05T00:00:00+02:00</published><updated>2019-12-05T00:00:00+02:00</updated><author><name>Jack De Winter</name></author><id>tag:dvesti.github.io,2019-12-05:/Pelican/2019/12/05/getting-notified-about-new-releases/</id><summary type="html">&lt;p&gt;Unlike a number of themes that exist for Pelican, the Elegant theme is currently under
active development. The immediate benefit of this for you is that Elegant supports
recent technologies/services such as &lt;a href="https://utteranc.es/"&gt;Utterances&lt;/a&gt; for comments and
the &lt;a href="https://applause-button.com/"&gt;Applause button&lt;/a&gt; for quick and simple user feedback.
The other main benefits …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Unlike a number of themes that exist for Pelican, the Elegant theme is currently under
active development. The immediate benefit of this for you is that Elegant supports
recent technologies/services such as &lt;a href="https://utteranc.es/"&gt;Utterances&lt;/a&gt; for comments and
the &lt;a href="https://applause-button.com/"&gt;Applause button&lt;/a&gt; for quick and simple user feedback.
The other main benefits are that any requests, be they bug reports or feature requests,
are logged in the project&amp;#8217;s Issues&amp;nbsp;database.&lt;/p&gt;
&lt;p&gt;These issues are actively going through triage, being worked on by the Elegant community,
and being addressed in ongoing releases of Elegant. In addition,
&lt;a href="https://github.com/Pelican-Elegant/elegant/milestones"&gt;the roadmap&lt;/a&gt; let&amp;#8217;s you see what
the Elegant team is working on, allowing you to decide if you want to contribute and
help bring some feature of the theme to&amp;nbsp;life!&lt;/p&gt;
&lt;p&gt;To give you the control to decide whether to update your website and benefit from the
latest version of Elegant, we offer two automated ways to find out about new&amp;nbsp;releases.&lt;/p&gt;
&lt;h2 id="subscribe-to-the-email-newsletter"&gt;Subscribe to the email Newsletter&lt;a class="headerlink" href="#subscribe-to-the-email-newsletter" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Each of the article pages on this Elegant documentation website contain a section at
the bottom of the right sidebar titled &lt;code&gt;Get New Release Alert&lt;/code&gt;. By entering your email
address in the box below and clicking on the &lt;code&gt;Notify Me&lt;/code&gt; button, you are signing up for
our newsletter. This simple newsletter uses Elegant&amp;#8217;s support for
&lt;a href="https://mailchimp.com/"&gt;MailChimp&lt;/a&gt;, &lt;!-- yaspeller ignore --&gt;
and is only used to notify people when there are new version of Elegant&amp;nbsp;available.&lt;/p&gt;
&lt;h2 id="subscribe-to-the-rss-feed-for-the-documentation-site"&gt;Subscribe to the &lt;span class="caps"&gt;RSS&lt;/span&gt; feed for the Documentation Site&lt;a class="headerlink" href="#subscribe-to-the-rss-feed-for-the-documentation-site" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you have any reservations about actively subscribing to a newsletter through a
mailing list, you can passively subscribe to receive updates notices for Elegant by
subscribing to the &lt;span class="caps"&gt;RSS&lt;/span&gt; feed for this website using your browser. By selecting the &lt;span class="caps"&gt;RSS&lt;/span&gt;
Feed icon under &lt;code&gt;Stay In Touch&lt;/code&gt;, your browser will handle the information according to
any plugins present in your browser. Once this link is visible, simply copy it into
your favorite &lt;span class="caps"&gt;RSS&lt;/span&gt; reader and you will be notified by that &lt;span class="caps"&gt;RSS&lt;/span&gt; reader when there is a
new&amp;nbsp;release.&lt;/p&gt;</content><category term="101 — Quick Start"></category><category term="pelican-theme"></category><category term="new-releases"></category></entry><entry><title>Elegant Is Safe</title><link href="https://dvesti.github.io/Pelican/2019/12/02/elegant-is-safe/" rel="alternate"></link><published>2019-12-02T11:45:00+02:00</published><updated>2019-12-02T11:45:00+02:00</updated><author><name>Talha Mansoor</name></author><id>tag:dvesti.github.io,2019-12-02:/Pelican/2019/12/02/elegant-is-safe/</id><summary type="html"></summary><content type="html">&lt;p&gt;Static sites are usually safer than server side rendered sites. There can be some edge cases though even for a static&amp;nbsp;site.&lt;/p&gt;
&lt;p&gt;We came to know about a potential security issue that involves, &lt;code&gt;target="_blank"&lt;/code&gt;. We have updated our code to follow the recommended&amp;nbsp;fix.&lt;/p&gt;
&lt;p&gt;You can read more about the issue and its fix at these&amp;nbsp;links,&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://mathiasbynens.github.io/rel-noopener/"&gt;About rel=noopener&lt;/a&gt; &lt;!-- yaspeller ignore --&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-no-target-blank.md"&gt;react/jsx-no-target-blank&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><category term="101 — Quick Start"></category><category term="security"></category></entry><entry><title>Quickly get a GitHub hosted blog with Pelican, Elegant with little setup steps.</title><link href="https://dvesti.github.io/Pelican/2019/01/11/quickly-get-a-github-hosted-blog-with-pelican-elegant-with-little-setup-steps/" rel="alternate"></link><published>2019-01-11T17:30:47+01:00</published><updated>2019-01-11T17:30:47+01:00</updated><author><name>Pablo Iranzo Gómez</name></author><id>tag:dvesti.github.io,2019-01-11:/Pelican/2019/01/11/quickly-get-a-github-hosted-blog-with-pelican-elegant-with-little-setup-steps/</id><summary type="html">&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-approach"&gt;The&amp;nbsp;approach&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#how-does-it-work-under-the-hood"&gt;How does it work under the hood?&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#setup"&gt;Setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#automation-workflow"&gt;Automation workflow&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#preparation"&gt;Preparation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#validation"&gt;Validation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#deployment"&gt;Deployment&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#blog-is-ready"&gt;Blog is&amp;nbsp;ready!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h1 id="introduction"&gt;Introduction&lt;a class="headerlink" href="#introduction" title="Permanent link"&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;We&amp;#8217;re using automation for some of the aspects of Elegant development, but one of the issues for users trying to setup a new site with Pelican is to download …&lt;/p&gt;</summary><content type="html">&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-approach"&gt;The&amp;nbsp;approach&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#how-does-it-work-under-the-hood"&gt;How does it work under the hood?&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#setup"&gt;Setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#automation-workflow"&gt;Automation workflow&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#preparation"&gt;Preparation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#validation"&gt;Validation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#deployment"&gt;Deployment&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#blog-is-ready"&gt;Blog is&amp;nbsp;ready!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h1 id="introduction"&gt;Introduction&lt;a class="headerlink" href="#introduction" title="Permanent link"&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;We&amp;#8217;re using automation for some of the aspects of Elegant development, but one of the issues for users trying to setup a new site with Pelican is to download plugins, theme, doing configuration,&amp;nbsp;etc.&lt;/p&gt;
&lt;p&gt;Based on this feedback, a new &amp;#8216;blog-o-matic&amp;#8217; approach has been&amp;nbsp;tested:&lt;/p&gt;
&lt;h1 id="the-approach"&gt;The approach&lt;a class="headerlink" href="#the-approach" title="Permanent link"&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/iranzo/blog-o-matic/"&gt;Blog-o-Matic&lt;/a&gt;, uses several discussed topics so&amp;nbsp;far:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com"&gt;Github&lt;/a&gt; and &lt;span class="caps"&gt;GH&lt;/span&gt; Pages for hosting the source and the&amp;nbsp;website&lt;/li&gt;
&lt;li&gt;&lt;a href="https://travis-ci.org"&gt;Travis-&lt;span class="caps"&gt;CI&lt;/span&gt;.org&lt;/a&gt; for automating the update and generation&amp;nbsp;process&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.getpelican.com/"&gt;&lt;span class="quo"&gt;&amp;#8216;&lt;/span&gt;Pelican&amp;#8217;&lt;/a&gt; for static rendering of your blog from the markdown or AsciiDoc&amp;nbsp;articles&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Pelican-Elegant/elegant"&gt;&lt;span class="quo"&gt;&amp;#8216;&lt;/span&gt;Elegant&amp;#8217;&lt;/a&gt; for the&amp;nbsp;&amp;#8216;Theme&amp;#8217;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/buildinspace/peru"&gt;peru&lt;/a&gt; for automating repository upgrades for plugins,&amp;nbsp;etc&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The setup process is outlined at its &lt;a href="https://github.com/iranzo/blog-o-matic/"&gt;&lt;span class="caps"&gt;README&lt;/span&gt;.md&lt;/a&gt; and just requires a few steps to setup that, from that point, will allow you to get your website published each time you commit a new document to the content&amp;nbsp;folder.&lt;/p&gt;
&lt;p&gt;You can also check the &amp;#8216;generated&amp;#8217; website after installation via &lt;a href="https://iranzo.github.io/blog-o-matic"&gt;https://iranzo.github.io/blog-o-matic&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="how-does-it-work-under-the-hood"&gt;How does it work under the hood?&lt;a class="headerlink" href="#how-does-it-work-under-the-hood" title="Permanent link"&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;The repository, contains already the required setups and configurations for setting up a blog using github&amp;nbsp;pages.&lt;/p&gt;
&lt;p&gt;It requires some manual steps like configuring authentication token in order for automation to &amp;#8216;push&amp;#8217; to github the &amp;#8216;rendered webpage&amp;#8217;, plus enabling &amp;#8216;Travis &lt;span class="caps"&gt;CI&lt;/span&gt;&amp;#8217; automation for doing that&amp;nbsp;step.&lt;/p&gt;
&lt;p&gt;Check the updated &lt;a href="https://github.com/iranzo/blog-o-matic"&gt;&lt;span class="caps"&gt;README&lt;/span&gt; on Blog-o-Matic&lt;/a&gt; if you&amp;#8217;re interested in the setup, but thing&amp;nbsp;is:&lt;/p&gt;
&lt;h2 id="setup"&gt;Setup&lt;a class="headerlink" href="#setup" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Repository contains already predefined Travis &lt;span class="caps"&gt;CI&lt;/span&gt;&amp;nbsp;configuration&lt;/li&gt;
&lt;li&gt;A &lt;span class="caps"&gt;GH&lt;/span&gt; token is needed for Travis &lt;span class="caps"&gt;CI&lt;/span&gt; to push to the &amp;#8216;master&amp;#8217; branch that is used by github&amp;nbsp;pages&lt;/li&gt;
&lt;li&gt;The token needs to be configured as environment variable in &amp;#8216;travis-ci.org&amp;#8217; which needs to be enabled for your&amp;nbsp;repository&lt;/li&gt;
&lt;li&gt;Once this is done, all the automation is&amp;nbsp;ready.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="automation-workflow"&gt;Automation workflow&lt;a class="headerlink" href="#automation-workflow" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The automation, on a new &amp;#8216;commit&amp;#8217; (new config, new article, whatever), that can be even done via github.com Web User Interface, will launch a set of&amp;nbsp;tasks:&lt;/p&gt;
&lt;h3 id="preparation"&gt;Preparation&lt;a class="headerlink" href="#preparation" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Setup python environment (Pelican uses&amp;nbsp;python)&lt;/li&gt;
&lt;li&gt;Install tool &amp;#8216;peru&amp;#8217; to sync from other repositories (for later syncing plugins, latest theme,&amp;nbsp;etc)&lt;/li&gt;
&lt;li&gt;Launch the synchronization of themes, plugins etc (as defined in &lt;code&gt;peru.yaml&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="validation"&gt;Validation&lt;a class="headerlink" href="#validation" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Validate that web page builds (&lt;code&gt;make html&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Validate that it builds with publish configuration (&lt;code&gt;make publish&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="deployment"&gt;Deployment&lt;a class="headerlink" href="#deployment" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Copy extra files to generated&amp;nbsp;website&lt;/li&gt;
&lt;li&gt;Update the checked out git config to use https so that we can use the token defined in environment variable &lt;code&gt;GHTOKEN&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Regenerate website and push to&amp;nbsp;github&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="blog-is-ready"&gt;Blog is ready!&lt;a class="headerlink" href="#blog-is-ready" title="Permanent link"&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;At this point, Travis &lt;span class="caps"&gt;CI&lt;/span&gt; will have built the blog with the sample content &lt;code&gt;content/welcome.md&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Keep adding new files to your new repository in the &lt;code&gt;content/&lt;/code&gt; folder and check the configuration settings in &lt;code&gt;pelicanconf.py&lt;/code&gt; to customize your name, twitter, &lt;span class="caps"&gt;SEO&lt;/span&gt;,&amp;nbsp;etc&lt;/p&gt;
&lt;p&gt;Bear in mind, that at this point you&amp;#8217;re using a regular Elegant setup with Pelican and some Pelican Plugins, so refer to &lt;code&gt;peru.yaml&lt;/code&gt; for the URLs containing the files and extra information that might be helpful for you to learn on the features and customization&amp;nbsp;possibilities.&lt;/p&gt;
&lt;p&gt;Enjoy your Elegant&amp;nbsp;blog!&lt;/p&gt;</content><category term="101 — Quick Start"></category><category term="pelican"></category><category term="foss"></category><category term="travis"></category><category term="ci/cd"></category><category term="elegant"></category><category term="blog"></category><category term="python"></category><category term="github"></category><category term="blog-o-matic"></category></entry><entry><title>Not Convinced?</title><link href="https://dvesti.github.io/Pelican/2014/06/01/what-people-say-about-elegant/" rel="alternate"></link><published>2014-06-01T23:45:00+03:00</published><updated>2014-06-01T23:45:00+03:00</updated><author><name>Talha Mansoor</name></author><id>tag:dvesti.github.io,2014-06-01:/Pelican/2014/06/01/what-people-say-about-elegant/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;Thanks for this amazing&amp;nbsp;project.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/Pelican-Elegant/elegant/issues/111#issuecomment-40943827"&gt;Sebastian Lauwers&lt;/a&gt; &lt;!-- yaspeller ignore --&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Let me start by saying your theme is awesome. I would like to use it for my&amp;nbsp;blog.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/Pelican-Elegant/elegant/issues/115#issue-30103539"&gt;bnice5000&lt;/a&gt; &lt;!-- yaspeller ignore --&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;i love the elegant&amp;nbsp;theme&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/Pelican-Elegant/elegant/issues/118#issue-32226954"&gt;7rack&lt;/a&gt; &lt;!-- yaspeller ignore --&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I tried your pelican theme elegant, it&amp;#8217;s awesome, clean and&amp;nbsp;elegant.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/Pelican-Elegant/elegant/pull/2#issue-19502670"&gt;悟道洞穴人&lt;/a&gt;&lt;/p&gt;
&lt;blockquote class="twitter-tweet" lang="en"&gt;&lt;p&gt;&lt;a href="https://twitter.com/talham_"&gt;@talham_&lt;/a&gt; yours is the most …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;Thanks for this amazing&amp;nbsp;project.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/Pelican-Elegant/elegant/issues/111#issuecomment-40943827"&gt;Sebastian Lauwers&lt;/a&gt; &lt;!-- yaspeller ignore --&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Let me start by saying your theme is awesome. I would like to use it for my&amp;nbsp;blog.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/Pelican-Elegant/elegant/issues/115#issue-30103539"&gt;bnice5000&lt;/a&gt; &lt;!-- yaspeller ignore --&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;i love the elegant&amp;nbsp;theme&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/Pelican-Elegant/elegant/issues/118#issue-32226954"&gt;7rack&lt;/a&gt; &lt;!-- yaspeller ignore --&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I tried your pelican theme elegant, it&amp;#8217;s awesome, clean and&amp;nbsp;elegant.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/Pelican-Elegant/elegant/pull/2#issue-19502670"&gt;悟道洞穴人&lt;/a&gt;&lt;/p&gt;
&lt;blockquote class="twitter-tweet" lang="en"&gt;&lt;p&gt;&lt;a href="https://twitter.com/talham_"&gt;@talham_&lt;/a&gt; yours is the most innovative Pelican theme I&amp;#39;ve seen yet: &lt;a href="http://t.co/worboJFRuX"&gt;http://t.co/worboJFRuX&lt;/a&gt;. I love the search&amp;nbsp;feature.&lt;/p&gt;&amp;mdash; Tshepang Lekhonkhobe (@tshepang_dev) &lt;a href="https://twitter.com/tshepang_dev/statuses/384347807387095040"&gt;September 29, 2013&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;!-- yaspeller ignore --&gt;
&lt;script async src="//platform.twitter.com/widgets.js"&gt;&lt;/script&gt;&lt;/p&gt;
&lt;blockquote class="twitter-tweet" lang="en"&gt;&lt;p&gt;&lt;a href="https://twitter.com/talham_"&gt;@talham_&lt;/a&gt; Thanks for the Elegant theme. It is really elegant&amp;nbsp;:).&lt;/p&gt;&amp;mdash; Simon Cahuk (@cahuk) &lt;a href="https://twitter.com/cahuk/statuses/391533360830775296"&gt;October 19, 2013&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;!-- yaspeller ignore --&gt;
&lt;script async src="//platform.twitter.com/widgets.js"&gt;&lt;/script&gt;&lt;/p&gt;
&lt;blockquote class="twitter-tweet" lang="en"&gt;&lt;p&gt;&lt;a href="https://twitter.com/talham_"&gt;@talham_&lt;/a&gt; Hi, Elegant is a cool theme. Checking it&amp;nbsp;out.&lt;/p&gt;&amp;mdash; Fayad Fami (@fayadfami) &lt;a href="https://twitter.com/fayadfami/statuses/451420620241137664"&gt;April 2, 2014&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;!-- yaspeller ignore --&gt;
&lt;script async src="//platform.twitter.com/widgets.js"&gt;&lt;/script&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I&amp;#8217;m hugely impressed with your work on the theme; thank you for opening the
code for&amp;nbsp;it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;J&amp;nbsp;L&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Thank you very much for your reply and for your great Pelican theme&amp;nbsp;!)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Alexandr &lt;!-- yaspeller ignore --&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;pelican-elegant is the best pelican&amp;nbsp;theme&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;vim xiang &lt;!-- yaspeller ignore --&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;as I&amp;#8217;m just starting using Pelican, I have to say: great work on the elegant&amp;nbsp;theme.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Yanxin &lt;!-- yaspeller ignore --&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I am using the very nice elegant theme for pelican that you&amp;nbsp;wrote.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Brian Blais &lt;!-- yaspeller ignore --&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It is really&amp;nbsp;awesome!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Jinkun Lin &lt;!-- yaspeller ignore --&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;thanks for writing the &amp;#8220;elegant&amp;#8221;&amp;nbsp;theme&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://plus.google.com/u/0/+JedBrown/"&gt;Jed Brown&lt;/a&gt; &lt;!-- yaspeller ignore --&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hi Talha, thanks to your great theme, I made my homepage better :) I was once &lt;!-- yaspeller ignore --&gt;
trying to make a theme of my own. But never can i make such an awesome one
like&amp;nbsp;#Elegant#.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="http://oncrashreboot.com/elegant-best-pelican-theme-features#comment-1451253675"&gt;liangfu&lt;/a&gt; &lt;!-- yaspeller ignore --&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Thanks for your beautiful&amp;nbsp;work!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="http://oncrashreboot.com/elegant-best-pelican-theme-features#comment-1429880788"&gt;xiaoweiz&lt;/a&gt; &lt;!-- yaspeller ignore --&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Awesome&amp;nbsp;work&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="http://oncrashreboot.com/elegant-best-pelican-theme-features#comment-1364943390"&gt;Kevin Ndung&amp;#8217;u&lt;/a&gt; &lt;!-- yaspeller ignore --&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Nice&amp;nbsp;work!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="http://oncrashreboot.com/elegant-best-pelican-theme-features#comment-1340387082"&gt;Mohamed&lt;/a&gt; &lt;!-- yaspeller ignore --&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Thanks dude, an awesome&amp;nbsp;theme!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="http://oncrashreboot.com/elegant-best-pelican-theme-features#comment-1123824877"&gt;linuxabc&lt;/a&gt; &lt;!-- yaspeller ignore --&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Really cool&amp;nbsp;theme.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="http://oncrashreboot.com/elegant-best-pelican-theme-features#comment-1117848663"&gt;Calf&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This theme is fucking awesome. I will start using it =). Thank you &lt;!-- yaspeller ignore --&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="http://oncrashreboot.com/elegant-best-pelican-theme-features#comment-1116584083"&gt;Kolmar Kafran&lt;/a&gt; &lt;!-- yaspeller ignore --&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Thank you so much for this wonderful pelican&amp;nbsp;theme&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="http://oncrashreboot.com/elegant-best-pelican-theme-features#comment-1080851511"&gt;phdbreak&lt;/a&gt; &lt;!-- yaspeller ignore --&gt;&lt;/p&gt;</content><category term="101 — Quick Start"></category><category term="pelican-theme"></category><category term="testimonials"></category></entry></feed>